plugins {
    id 'java'
    id 'io.freefair.lombok' version '8.4'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'redis.clients:jedis:3.10.0'
    runtimeOnly 'ch.qos.logback:logback-classic:1.4.14'

    // from the code monstur project:
    testImplementation 'org.springframework.data:spring-data-redis:2.7.18'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.7.0'
}

group = 'akr.redis.codemonstur.test'
version = '1.0.0-SNAPSHOT'
description = 'Embedded Redis test application'
java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17


publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}


jar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes 'Main-Class': 'akr.redis.codemonstur.test.RedisClientApp'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

task copyFatJarToDockerDirectory(type: Copy) {
    from jar
    into "$buildDir/docker"
    rename { fileName ->
        "${project.name}.jar"
    }
}

copyFatJarToDockerDirectory.dependsOn jar

build.dependsOn copyFatJarToDockerDirectory

